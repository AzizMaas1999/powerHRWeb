{% extends 'base.html.twig' %}

{% block title %}Créer un nouveau CLFR{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            
            // Custom validation for nom field
            const nomInput = document.querySelector('#clfr_nom');
            nomInput.setAttribute('minlength', '2');
            nomInput.setAttribute('maxlength', '100');
            nomInput.setAttribute('required', 'required');
            nomInput.setAttribute('pattern', '^[A-Za-zÀ-ÿ0-9\s\-\'\.]+$');
            
            // Custom validation for matricule fiscal
            const matriculeInput = document.querySelector('#clfr_matricule_fiscale');
            matriculeInput.setAttribute('maxlength', '20');
            
            // Custom validation for phone number
            const telInput = document.querySelector('#clfr_numTel');
            telInput.setAttribute('pattern', '^\+?[0-9]*$');
            
            // Custom validation for type
            const typeInput = document.querySelector('#clfr_type');
            typeInput.setAttribute('required', 'required');
            
            form.addEventListener('submit', function(event) {
                let isValid = true;
                
                // Validate nom
                if (!nomInput.value || nomInput.value.length < 2 || nomInput.value.length > 100) {
                    showError(nomInput, 'Le nom doit comporter entre 2 et 100 caractères.');
                    isValid = false;
                }
                
                // Validate phone number
                if (telInput.value && !telInput.value.match(/^\+?[0-9]*$/)) {
                    showError(telInput, 'Le numéro de téléphone est invalide.');
                    isValid = false;
                }
                
                // Validate type
                if (!typeInput.value) {
                    showError(typeInput, 'Le type est obligatoire.');
                    isValid = false;
                }
                
                if (!isValid) {
                    event.preventDefault();
                }
            });
            
            function showError(element, message) {
                const feedback = element.parentElement.querySelector('.invalid-feedback');
                if (feedback) {
                    feedback.textContent = message;
                }
                element.classList.add('is-invalid');
            }
            
            // Clear validation state on input
            const inputs = form.querySelectorAll('input, select');
            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    this.classList.remove('is-invalid');
                    const feedback = this.parentElement.querySelector('.invalid-feedback');
                    if (feedback) {
                        feedback.textContent = '';
                    }
                });
            });
        });
    </script>
{% endblock %}

{% block body %}
    <div class="container mt-5">
        <div class="card shadow-lg border-0 rounded-4 p-4 bg-dark text-white">
            <div class="card-body">
                <h2 class="mb-4 text-center">
                    <i class="fas fa-plus-circle me-2"></i> Nouveau CLFR
                </h2>

                {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'class': 'needs-validation'}}) }}
                    {% if form.vars.valid is not defined or form.vars.valid == false %}
                        <div class="alert alert-danger mt-3">
                            <strong>Il y a des erreurs dans le formulaire.</strong>
                        </div>
                    {% endif %}

                    <div class="form-group mb-3">
                        {{ form_label(form.nom, null, {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.nom, {'attr': {'class': 'form-control' ~ (form.nom.vars.valid ? '' : ' is-invalid')}}) }}
                        <div class="invalid-feedback">
                            {{ form_errors(form.nom) }}
                        </div>
                    </div>

                    <div class="form-group mb-3">
                        {{ form_label(form.matricule_fiscale, null, {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.matricule_fiscale, {'attr': {'class': 'form-control' ~ (form.matricule_fiscale.vars.valid ? '' : ' is-invalid')}}) }}
                        <div class="invalid-feedback">
                            {{ form_errors(form.matricule_fiscale) }}
                        </div>
                    </div>

                    <div class="form-group mb-3">
                        {{ form_label(form.adresse, null, {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.adresse, {'attr': {'class': 'form-control' ~ (form.adresse.vars.valid ? '' : ' is-invalid')}}) }}
                        <div class="invalid-feedback">
                            {{ form_errors(form.adresse) }}
                        </div>
                    </div>

                    <div class="form-group mb-3">
                        {{ form_label(form.numTel, null, {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.numTel, {'attr': {'class': 'form-control' ~ (form.numTel.vars.valid ? '' : ' is-invalid')}}) }}
                        <div class="invalid-feedback">
                            {{ form_errors(form.numTel) }}
                        </div>
                    </div>

                    <div class="form-group mb-3">
                        {{ form_label(form.type, null, {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.type, {'attr': {'class': 'form-control' ~ (form.type.vars.valid ? '' : ' is-invalid')}}) }}
                        <div class="invalid-feedback">
                            {{ form_errors(form.type) }}
                        </div>
                    </div>

                    <div class="form-group mb-3">
                        {{ form_label(form.photoPath, null, {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.photoPath, {'attr': {'class': 'form-control' ~ (form.photoPath.vars.valid ? '' : ' is-invalid')}}) }}
                        <div class="invalid-feedback">
                            {{ form_errors(form.photoPath) }}
                        </div>
                    </div>

                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-primary">Créer</button>
                        <a href="{{ path('app_clfr_index') }}" class="btn btn-outline-light">
                            <i class="fas fa-arrow-left me-1"></i> Retour à la liste
                        </a>
                    </div>
                {{ form_end(form) }}
            </div>
        </div>
    </div>
{% endblock %}
