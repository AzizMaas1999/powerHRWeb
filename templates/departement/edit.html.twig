{% extends 'base.html.twig' %}

{% block title %}Modifier Département{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .form-container {
            background: rgba(255, 255, 255, 0.02);
            border-radius: 10px;
            padding: 25px;
            margin-top: 20px;
            box-shadow: 0 4pYx 24px rgba(0, 0, 0, 0.1);
            max-width: 800px;
            margin-left: auto;
            margin-right: auto;
        }
        .form-title {
            color: rgba(255, 255, 255, 0.9);
            font-size: 1.5rem;
            margin-bottom: 25px;
            font-weight: 500;
        }
        .form-label {
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: 8px;
            font-weight: 500;
        }
        .form-control {
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: rgba(255, 255, 255, 0.9) !important;
            border-radius: 6px;
            padding: 10px 15px;
            transition: all 0.3s ease;
        }
        .form-control:focus {
            border-color: rgba(255, 255, 255, 0.2);
            background: rgba(255, 255, 255, 0.08);
            box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.05);
            color: rgba(255, 255, 255, 0.9) !important;
        }
        .form-control::placeholder {
            color: rgba(255, 255, 255, 0.4);
        }
        select.form-control {
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='rgba(255,255,255,0.5)' viewBox='0 0 16 16'%3E%3Cpath d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 12px center;
            padding-right: 35px;
        }
        select.form-control option {
            background-color: #191c24;
            color: rgba(255, 255, 255, 0.9);
            padding: 8px;
        }
        select.form-control option:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }
        .form-text {
            color: rgba(255, 255, 255, 0.6);
            font-size: 0.875rem;
            margin-top: 5px;
        }
        .invalid-feedback {
            display: none;
            color: #ff4d4d;
            font-size: 0.85rem;
            margin-top: 4px;
            margin-left: 2px;
            background: rgba(255, 77, 77, 0.1);
            border-radius: 4px;
            padding: 8px 12px;
            border-left: 3px solid #ff4d4d;
            animation: fadeIn 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-5px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .form-control.is-invalid {
            border-color: rgba(255, 77, 77, 0.5);
            background-image: none;
            animation: shake 0.5s ease;
        }
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }
        .form-control.is-valid {
            border-color: #198754;
            background-image: none;
        }
        .error-icon {
            color: #ff4d4d;
            font-size: 14px;
        }
        .validation-message {
            font-size: 0.75rem;
            color: rgba(255, 255, 255, 0.6);
            margin-top: 4px;
        }
        .btn-action {
            padding: 8px 16px;
            font-size: 0.95rem;
            border-radius: 6px;
            transition: all 0.2s ease;
            display: inline-flex;
            align-items: center;
            gap: 6px;
        }
        .btn-action i {
            font-size: 16px;
        }
        .btn-return {
            background: rgba(255, 255, 255, 0.1);
            color: rgba(255, 255, 255, 0.8);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        .btn-return:hover {
            background: rgba(255, 255, 255, 0.15);
            color: rgba(255, 255, 255, 0.9);
        }
        .btn-save {
            background: #198754;
            color: white;
            border: none;
        }
        .btn-save:hover {
            background: #157347;
        }
        .alert {
            background: rgba(255, 77, 77, 0.1);
            border-left: 3px solid #ff4d4d;
            color: #ff4d4d;
            padding: 12px 15px;
            border-radius: 6px;
            margin-bottom: 20px;
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        .alert i {
            font-size: 16px;
        }
        .char-counter {
            font-size: 0.8rem;
            color: rgba(255, 255, 255, 0.6);
            margin-top: 5px;
            display: flex;
            align-items: center;
            gap: 5px;
        }
        .char-counter.warning {
            color: #ffc107;
        }
        .char-counter.danger {
            color: #dc3545;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container mt-5">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="text-white">Modifier Département</h1>
        </div>

        <div class="form-container">
            {% if form_errors(form) %}
                <div class="alert">
                    <i class="bi bi-exclamation-triangle-fill"></i>
                    {{ form_errors(form) }}
                </div>
            {% endif %}

            {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
            
            <div class="row g-4">
                <div class="col-md-6">
                    <div class="mb-3">
                        {{ form_label(form.entreprise, 'Entreprise associée', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.entreprise, {'attr': {'class': 'form-control' ~ (form.entreprise.vars.valid ? '' : ' is-invalid'), 'required': 'required'}}) }}
                        <small class="form-text">Sélectionnez l'entreprise à laquelle appartient ce département</small>
                        {% if app.request.method == 'POST' %}
                            <div class="invalid-feedback" id="entreprise-error" style="display: flex;">
                                <i class="bi bi-exclamation-triangle-fill error-icon"></i>
                                {{ form_errors(form.entreprise) }}
                            </div>
                        {% endif %}
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="mb-3">
                        {{ form_label(form.nom, 'Nom du département', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.nom, {'attr': {
                            'class': 'form-control' ~ (form.nom.vars.valid ? '' : ' is-invalid'),
                            'placeholder': 'Entrez le nom du département',
                            'required': 'required',
                            'minlength': '3',
                            'maxlength': '30',
                            'pattern': '^[a-zA-ZÀ-ÿ0-9\s-]{3,30}$'
                        }}) }}
                        <small class="form-text">3 à 30 caractères, lettres et chiffres acceptés</small>
                        {% if app.request.method == 'POST' %}
                            <div class="invalid-feedback" id="nom-error" style="display: flex;">
                                <i class="bi bi-exclamation-triangle-fill error-icon"></i>
                                {{ form_errors(form.nom) }}
                            </div>
                        {% endif %}
                    </div>
                </div>

                <div class="col-12">
                    <div class="mb-4">
                        {{ form_label(form.description, 'Description', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.description, {'attr': {
                            'class': 'form-control' ~ (form.description.vars.valid ? '' : ' is-invalid'),
                            'rows': '4',
                            'placeholder': 'Décrivez le département...',
                            'required': 'required',
                            'maxlength': '120'
                        }}) }}
                        <small class="form-text">Maximum 120 caractères</small>
                        {% if app.request.method == 'POST' %}
                            <div class="invalid-feedback" id="description-error" style="display: flex;">
                                <i class="bi bi-exclamation-triangle-fill error-icon"></i>
                                {{ form_errors(form.description) }}
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-between mt-4">
                <a href="{{ path('app_departement_index') }}" class="btn btn-action btn-return">
                    <i class="bi bi-arrow-left"></i> Retour
                </a>
                <button type="submit" class="btn btn-action btn-save">
                    <i class="bi bi-check-lg"></i> Enregistrer
                </button>
            </div>

            {{ form_end(form) }}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            const nomInput = document.querySelector('#departement_nom');
            const descriptionInput = document.querySelector('#departement_description');
            const entrepriseSelect = document.querySelector('#departement_entreprise');
            
            function validateNom() {
                const nom = nomInput.value.trim();
                const errorDiv = document.getElementById('nom-error');
                if (!nom) {
                    showError(nomInput, errorDiv, 'Le nom du département est requis et doit contenir entre 3 et 30 caractères');
                    return false;
                } else if (!nomPattern.test(nom)) {
                    showError(nomInput, errorDiv, 'Le nom doit contenir entre 3 et 30 caractères (lettres, chiffres, espaces et tirets)');
                    return false;
                }
                showSuccess(nomInput, errorDiv);
                return true;
            }

            function validateDescription() {
                const description = descriptionInput.value.trim();
                const errorDiv = document.getElementById('description-error');
                if (!description) {
                    showError(descriptionInput, errorDiv, 'La description est requise et ne doit pas dépasser 120 caractères');
                    return false;
                } else if (description.length > 120) {
                    showError(descriptionInput, errorDiv, 'La description ne doit pas dépasser 120 caractères');
                    return false;
                }
                showSuccess(descriptionInput, errorDiv);
                return true;
            }

            function validateEntreprise() {
                const errorDiv = document.getElementById('entreprise-error');
                if (!entrepriseSelect.value) {
                    showError(entrepriseSelect, errorDiv, 'Veuillez sélectionner une entreprise pour ce département');
                    return false;
                }
                showSuccess(entrepriseSelect, errorDiv);
                return true;
            }
            
            function showError(input, errorDiv, message) {
                input.classList.add('is-invalid');
                input.classList.remove('is-valid');
                errorDiv.style.display = 'flex';
                errorDiv.innerHTML = `<i class="bi bi-exclamation-triangle-fill error-icon"></i> ${message}`;
            }

            function showSuccess(input, errorDiv) {
                input.classList.remove('is-invalid');
                input.classList.add('is-valid');
                errorDiv.style.display = 'none';
            }

            // Add character counter for description
            const descriptionCounter = document.createElement('div');
            descriptionCounter.className = 'char-counter';
            descriptionInput.parentNode.appendChild(descriptionCounter);

            function updateCharCounter() {
                const maxLength = 120;
                const currentLength = descriptionInput.value.length;
                const remaining = maxLength - currentLength;
                
                descriptionCounter.innerHTML = `<i class="bi bi-pencil-square"></i> ${currentLength}/${maxLength} caractères`;
                
                // Update counter color based on remaining characters
                descriptionCounter.className = 'char-counter';
                if (currentLength >= maxLength) {
                    descriptionCounter.classList.add('danger');
                } else if (currentLength >= maxLength * 0.8) {
                    descriptionCounter.classList.add('warning');
                }
            }

            // Initial validation on page load
            function validateAllFields() {
                validateNom();
                validateDescription();
                validateEntreprise();
            }

            // Validate on input/change
            nomInput.addEventListener('input', validateNom);
            descriptionInput.addEventListener('input', validateDescription);
            entrepriseSelect.addEventListener('change', validateEntreprise);

            // Validate on blur
            nomInput.addEventListener('blur', validateNom);
            descriptionInput.addEventListener('blur', validateDescription);
            entrepriseSelect.addEventListener('blur', validateEntreprise);

            // Form submission
            form.addEventListener('submit', function(e) {
                let isValid = true;

                if (!validateNom()) isValid = false;
                if (!validateDescription()) isValid = false;
                if (!validateEntreprise()) isValid = false;

                if (!isValid) {
                    e.preventDefault();
                }
            });

            // Initialize counter and validation
            descriptionInput.addEventListener('input', updateCharCounter);
            updateCharCounter();
            validateAllFields();

            // Add event listeners for immediate feedback
            nomInput.addEventListener('focus', function() {
                if (!nomInput.value.trim()) {
                    validateNom();
                }
            });

            descriptionInput.addEventListener('focus', function() {
                if (!descriptionInput.value.trim()) {
                    validateDescription();
                }
            });

            entrepriseSelect.addEventListener('focus', function() {
                if (!entrepriseSelect.value) {
                    validateEntreprise();
                }
            });
        });
    </script>
{% endblock %}
