{% extends 'base.html.twig' %}

{% block title %}Nouvelle Entreprise{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/intl-tel-input@18.2.1/build/css/intlTelInput.css">
    <style>
        .form-container {
            background: rgba(255, 255, 255, 0.02);
            border-radius: 10px;
            padding: 25px;
            margin-top: 20px;
            box-shadow: 0 4px 24px rgba(0, 0, 0, 0.1);
        }
        .form-title {
            color: rgba(255, 255, 255, 0.9);
            font-size: 1.5rem;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-label {
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: 8px;
            font-weight: 500;
        }
        .form-control {
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: rgba(255, 255, 255, 0.9);
            border-radius: 6px;
            padding: 10px 15px;
        }
        .form-control:focus {
            background: rgba(255, 255, 255, 0.08);
            border-color: rgba(255, 255, 255, 0.2);
            box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.05);
            color: rgba(255, 255, 255, 0.9);
        }
        .form-control.is-invalid {
            border-color: rgba(255, 77, 77, 0.5);
            background-image: none;
            animation: shake 0.5s ease;
        }
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }
        .form-check-input {
            background-color: rgba(255, 255, 255, 0.05);
            border-color: rgba(255, 255, 255, 0.2);
        }
        .form-check-input:checked {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }
        .form-check-label {
            color: rgba(255, 255, 255, 0.8);
        }
        .actions-container {
            margin-top: 25px;
            padding-top: 20px;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            display: flex;
            gap: 10px;
            justify-content: flex-end;
        }
        .invalid-feedback {
            display: none;
            color: #ff4d4d;
            font-size: 0.85rem;
            margin-top: 4px;
            margin-left: 2px;
            background: rgba(255, 77, 77, 0.1);
            border-radius: 4px;
            padding: 8px 12px;
            border-left: 3px solid #ff4d4d;
            animation: fadeIn 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-5px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .error-icon {
            color: #ff4d4d;
            font-size: 14px;
        }
        .help-text {
            color: rgba(255, 255, 255, 0.6);
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
        .btn-action {
            padding: 0.5rem 1rem;
            font-size: 0.875rem;
            border-radius: 6px;
            transition: all 0.3s ease;
        }
        .btn-action i {
            margin-right: 0.5rem;
        }
        .iti { width: 100%; }
        .iti__flag-container { z-index: 4; }
        .form-control.iti__tel-input { padding-left: 90px; }
        .iti__selected-flag { background: rgba(255,255,255,0.05); border-right: 1px solid rgba(255,255,255,0.1); border-radius: 6px 0 0 6px; }
        .iti__country-list { background: rgba(30,34,54,0.95); border: 1px solid rgba(255,255,255,0.1); color: rgba(255,255,255,0.9); }
        .iti__country:hover { background: rgba(255,255,255,0.1); }
        .iti__active { background: rgba(255,255,255,0.15); }
        .iti__selected-flag:hover { background: rgba(255,255,255,0.1); }
        .iti__arrow { border-top-color: rgba(255,255,255,0.7); }
        .iti__arrow--up { border-bottom-color: rgba(255,255,255,0.7); }
        .iti__country.iti__highlight { background: rgba(255,255,255,0.15); }
        .iti__country.iti__active.iti__highlight { background: rgba(255,255,255,0.2); }
        .iti__country.iti__preferred { background: rgba(255,255,255,0.05); }
        .iti__country.iti__preferred:hover { background: rgba(255,255,255,0.1); }
        .iti__divider { border-bottom-color: rgba(255,255,255,0.1); }
        .iti__search-input { background: rgba(255,255,255,0.05); color: rgba(255,255,255,0.9); border: 1px solid rgba(255,255,255,0.1); }
        .iti__search-input::placeholder { color: rgba(255,255,255,0.5); }
        .iti__search-input:focus { background: rgba(255,255,255,0.08); border-color: rgba(255,255,255,0.2); }
        /* Ensure phone input and button stay on the same line */
        .input-group {
            display: flex;
            flex-wrap: nowrap !important;
            align-items: stretch;
        }
        .input-group .iti {
            flex: 1 1 auto;
            width: 1%;
            min-width: 0;
        }
        .input-group .form-control.iti__tel-input {
            width: 100%;
            min-width: 0;
        }
        .input-group > .btn {
            white-space: nowrap;
            flex-shrink: 0;
        }
        .btn-verif-code {
            padding: 0.25rem 0.7rem !important;
            font-size: 0.82rem !important;
            line-height: 1.2 !important;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container mt-5">
        <div class="form-container">
            <h1 class="form-title">Nouvelle Entreprise</h1>

            {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        {{ form_label(form.nom, 'Nom', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.nom, {
                            'attr': {
                                'class': 'form-control' ~ (form_errors(form.nom) ? ' is-invalid' : ''),
                                'placeholder': 'Entrez le nom de l\'entreprise'
                            }
                        }) }}
                        <small class="help-text">Entre 3 et 15 caractères</small>
                        {% if form_errors(form.nom) %}
                            <div class="invalid-feedback" style="display: flex;">
                            <i class="bi bi-exclamation-triangle-fill error-icon"></i>
                                {{ form_errors(form.nom) }}
                        </div>
                        {% endif %}
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        {{ form_label(form.secteur, 'Secteur', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.secteur, {
                            'attr': {
                                'class': 'form-control' ~ (form_errors(form.secteur) ? ' is-invalid' : ''),
                                'placeholder': 'Entrez le secteur d\'activité'
                            }
                        }) }}
                        <small class="help-text">Entre 3 et 10 caractères</small>
                        {% if form_errors(form.secteur) %}
                            <div class="invalid-feedback" style="display: flex;">
                            <i class="bi bi-exclamation-triangle-fill error-icon"></i>
                                {{ form_errors(form.secteur) }}
                            </div>
                        {% endif %}
                        </div>
                    </div>
                </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        {{ form_label(form.matricule_fiscale, 'Matricule Fiscale', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.matricule_fiscale, {
                            'attr': {
                                'class': 'form-control' ~ (form_errors(form.matricule_fiscale) ? ' is-invalid' : ''),
                                'placeholder': 'Format: 1234567/A/B/C/000'
                            }
                        }) }}
                        <small class="help-text">Format exemple: 1234567/A/B/C/000</small>
                        {% if form_errors(form.matricule_fiscale) %}
                            <div class="invalid-feedback" style="display: flex;">
                            <i class="bi bi-exclamation-triangle-fill error-icon"></i>
                                {{ form_errors(form.matricule_fiscale) }}
                        </div>
                        {% endif %}
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        {{ form_label(form.phone_number, 'Téléphone', {'label_attr': {'class': 'form-label'}}) }}
                        <div class="input-group">
                            {{ form_widget(form.phone_number, {
                                'attr': {
                                    'class': 'form-control iti__tel-input' ~ (form_errors(form.phone_number) ? ' is-invalid' : ''),
                                    'placeholder': 'Entrez le numéro de téléphone',
                                    'id': 'entreprise_phone_number',
                                    'type': 'tel'
                                }
                            }) }}
                            <button type="button" id="send-verification-btn" class="btn btn-sm btn-outline-primary btn-action btn-verif-code">Envoyer le code</button>
                        </div>
                        <div id="send-status" style="margin-top: 5px; color: #0d6efd;"></div>
                        <small class="help-text">Format: +XXX XXXXXXXXXX</small>
                        {% if form_errors(form.phone_number) %}
                            <div class="invalid-feedback" style="display: flex;">
                                <i class="bi bi-exclamation-triangle-fill error-icon"></i>
                                {{ form_errors(form.phone_number) }}
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>


            <div class="actions-container">
                <a href="{{ path('app_entreprise_index') }}" class="btn btn-sm btn-outline-secondary btn-action">
                        <i class="bi bi-arrow-left"></i> Retour
                    </a>
                <button type="submit" class="btn btn-sm btn-outline-success btn-action">
                        <i class="bi bi-check-lg"></i> Créer
                    </button>
            </div>

            {{ form_end(form) }}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://cdn.jsdelivr.net/npm/intl-tel-input@18.2.1/build/js/intlTelInput.min.js"></script>
<script>
(function() {
    function initIntlTelInput() {
        const phoneInput = document.getElementById('entreprise_phone_number');
        if (phoneInput && !phoneInput.classList.contains('iti-initialized')) {
            window.intlTelInput(phoneInput, {
                initialCountry: 'tn',
                preferredCountries: ['tn', 'fr', 'ma', 'dz'],
                separateDialCode: true,
                utilsScript: "https://cdn.jsdelivr.net/npm/intl-tel-input@18.2.1/build/js/utils.js"
            });
            phoneInput.classList.add('iti-initialized');
            setTimeout(function() {
                window.dispatchEvent(new Event('resize'));
            }, 100);
        }
    }

    // Run on both direct page load and client-side navigation
    document.addEventListener('DOMContentLoaded', initIntlTelInput);
    document.addEventListener('turbo:load', initIntlTelInput);
    document.addEventListener('turbo:render', initIntlTelInput);

    // Watch for DOM changes
    const observer = new MutationObserver(initIntlTelInput);
    observer.observe(document.body, { childList: true, subtree: true });
})();
</script>
{% endblock %}


